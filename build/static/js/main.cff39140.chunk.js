(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{130:function(e,t,n){"use strict";n.r(t);var a=n(2),r=n.n(a),s=n(55),o=n.n(s);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));var c=n(17),i=n(16),p=n(57),u=n(58),l={command:""};var d=n(9),h={name:"",email:"",githubPassword:"",remoteBranch:"",remoteRepoURL:""};var f=n(7),m={files:[],gitResponseMesssages:[],gitCurrentBranch:"",gitLog:[],messageCount:0,globals:{homeDirectory:"/dev",corsProxy:"https://cors.isomorphic-git.org",githubUrl:"https://github.com/StopItGitSomeHelp/githelpstarter.git",repoUrl:"https://github.com/StopItGitSomeHelp/githelpstarter"}};var g=Object(i.combineReducers)({commandLine:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:l,t=arguments.length>1?arguments[1]:void 0,n=t.type,a=t.payload;switch(n){case"UPDATE_COMMAND":return{command:a};case"CLEAR_COMMAND_LINE":return{command:""};default:return e}},userDetails:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:h,t=arguments.length>1?arguments[1]:void 0,n=t.type,a=t.payload;switch(n){case"UPDATE_NAME":return Object(d.a)({},e,{name:a});case"UPDATE_EMAIL":return Object(d.a)({},e,{email:a});case"UPDATE_PASSWORD":return Object(d.a)({},e,{githubPassword:a});case"UPDATE_REMOTE_REPO_URL":return Object(d.a)({},e,{remoteRepoURL:a});case"UPDATE_REMOTE_BRANCH":return Object(d.a)({},e,{remoteBranch:a});default:return e}},appState:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:m,t=arguments.length>1?arguments[1]:void 0,n=t.type,a=t.payload;switch(n){case"UPDATE_FILE_DIRECTORY":return Object(d.a)({},e,{files:a});case"UPDATE_GIT_LOG":return Object(d.a)({},e,{gitLog:a});case"GET_CURRENT_DIRECTORY":return Object(d.a)({},e,{gitCurrentBranch:a});case"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG":var r={id:e.messageCount,text:a};return Object(d.a)({},e,{gitResponseMesssages:[r].concat(Object(f.a)(e.gitResponseMesssages)),store:e.messageCount++});case"UPDATE_WITH_MULTIPLE_GIT_RESPONSE_MESSAGE_LOG":var s=a.map(function(t){var n={id:e.messageCount,text:t};return e.messageCount++,n});return Object(d.a)({},e,{gitResponseMesssages:[].concat(Object(f.a)(s),Object(f.a)(e.gitResponseMesssages))});default:return e}}}),b=(n(77),n(78),n(0)),E=n.n(b),v=n(1),w=n(3),O=n(4),_=n(12),y=n(8),S=n(15),x=n(11),T=(n(81),n(59)),D=n.n(T),k=n(61),N=n(60),P=n.n(N),A=function(e){var t="",n=!1,a=!1,r=!1,s=!1;return e.forEach(function(e){n||"-m"!==e||r||(n=!0),n&&(a?(t+=e,e[e.length-1]===a||e[e.length-1]===a?(n=!1,r=!0):t+=" "):'"'!==e[0]&&"'"!==e[0]||(a=e[0],t+=e,e[e.length-1]===a||e[e.length-1]===a?(n=!1,r=!0):t+=" "))}),r||(s=!0),s?"error":t},R=function(e){var t,n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=he.getState().appState,r=["*modified","*deleted","*added","absent","modified","deleted","added","*unmodified","*absent"],s=!1;return e.map(function(e){return e.fileStatus}).forEach(function(e){r.indexOf(e)>-1&&(s=!0)}),t=s?"modified":"unmodified",n?t:G(t,e,a)},G=function(e,t,n){switch(e){case"unmodified":return"On branch ".concat(n.gitCurrentBranch,"\n\n      Your branch is up to date with 'origin/").concat(n.gitCurrentBranch,"'.\n\n      nothing to commit, working tree clean\n");case"modified":var a={unstagedModifiedFiles:[],unstagedAddedFiles:[],unstagedDeletedFiles:[],stagedModifiedFiles:[],stagedAddedFiles:[],stagedDeletedFiles:[],ignored:[]};t.forEach(function(e){switch(e.fileStatus){case"*modified":a.unstagedModifiedFiles.push(e.fileName);break;case"*deleted":a.unstagedDeletedFiles.push(e.fileName);break;case"*added":a.unstagedAddedFiles.push(e.fileName);break;case"modified":a.stagedModifiedFiles.push(e.fileName);break;case"deleted":a.stagedDeletedFiles.push(e.fileName);break;case"added":a.stagedAddedFiles.push(e.fileName)}});var r="On branch ".concat(n.gitCurrentBranch,"\n");return a.unstagedAddedFiles.length>0&&(r+=U(r),a.unstagedAddedFiles.forEach(function(e){r+="".concat(e,"\n")})),a.unstagedModifiedFiles.length>0&&(r+=j(r),a.unstagedModifiedFiles.forEach(function(e){r+="modified:    ".concat(e,"\n")})),a.unstagedDeletedFiles.length>0&&(r+=j(r),a.unstagedDeletedFiles.forEach(function(e){r+="deleted:    ".concat(e,"\n")})),a.stagedModifiedFiles.length>0&&(r+=M(r),a.stagedModifiedFiles.forEach(function(e){r+="modified:    ".concat(e,"\n")})),a.stagedDeletedFiles.length>0&&(r+=M(r),a.stagedDeletedFiles.forEach(function(e){r+="deleted:    ".concat(e,"\n")})),a.stagedAddedFiles.length>0&&(r+=M(r),a.stagedAddedFiles.forEach(function(e){r+="new file:    ".concat(e,"\n")})),r;default:return"We dont understand this git command"}},j=function(e){return-1===e.indexOf("Changes not staged for commit:")?'\n  Changes not staged for commit:\n  (use "git add/rm <file>..." to update what will be committed)\n  (use "git checkout -- <file>..." to discard changes in working directory)\n\n  ':""},U=function(e){return-1===e.indexOf("Untracked files:")?'\n    Untracked files:\n    (use "git add <file>..." to include in what will be committed)\n\n    ':""},M=function(e){return-1===e.indexOf("Changes to be committed:")?'\n    Changes to be committed:\n    (use "git reset HEAD <file>..." to unstage)\n\n    ':""},I=function(e){return"commit ".concat(e.commit,"\n\n                   Author: ").concat(e.author.name," <").concat(e.author.email,">\n\n                   Date: ").concat(new Date(1e3*e.author.timestamp),"\n\n                   message: ").concat(e.message)},C=function(e){var t="",n="";return e.forEach(function(a){"--list"!==a||n?!n&&"-"!==a[0]||"-b"===e[0]?(n="create",t=a):"-d"!==a&&"-D"!==a||n?"delete"===n&&"-"!==a[0]?t=a:n="error":n="delete":n="list"}),n||(n="list"),{branchName:t,branchCommand:n}},L=function(e){var t="",n="checkout";return 1===e.length?t=e[0]:2===e.length&&"-b"===e[0]?(t=e[1],n="create"):(n="error",t=e[1]),{branchName:t,command:n}},F=function(e,t){var n=!0,a={},r=e.indexOf("-m");if(-1===r)n=!1,a.message="missing -m";else if(r===e.length-1)n=!1,a.message="no commit message";else{if(e.slice(0,r).filter(function(e){return-1===t.indexOf(e)}).length>0)return n=!1,a.message="files not found",a;var s=A(e);a.message=s}return a.valid=n,a},H=n(35),W=n.n(H),B=function(e){return function(){var t=Object(v.a)(E.a.mark(function t(n){var a,r,s,o;return E.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,window.git.log({dir:e,depth:1});case 3:a=t.sent,r=a.map(function(e){return{commit:e.oid,message:e.message,author:e.author}}),s=r.map(function(e){return I(e)}),o={type:"UPDATE_WITH_MULTIPLE_GIT_RESPONSE_MESSAGE_LOG",payload:s},n({type:"UPDATE_GIT_LOG",payload:r}),n(o),t.next=15;break;case 12:t.prev=12,t.t0=t.catch(0),console.log(t.t0);case 15:case"end":return t.stop()}},t,null,[[0,12]])}));return function(e){return t.apply(this,arguments)}}()},Y=function(e,t,n,a,r){return function(){var s=Object(v.a)(E.a.mark(function s(o){var c,i,p;return E.a.wrap(function(s){for(;;)switch(s.prev=s.next){case 0:return s.prev=0,s.next=3,window.git.clone({dir:e,corsProxy:t,url:n,ref:a,singleBranch:r,depth:3});case 3:return s.next=5,window.pfs.readdir(e);case 5:return c=s.sent,s.next=8,window.git.currentBranch({dir:e});case 8:i=s.sent,p={type:"GET_CURRENT_DIRECTORY",payload:i},o({type:"UPDATE_FILE_DIRECTORY",payload:c}),o(p),s.next=18;break;case 15:s.prev=15,s.t0=s.catch(0),console.log(s.t0);case 18:case"end":return s.stop()}},s,null,[[0,15]])}));return function(e){return s.apply(this,arguments)}}()},J=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r,s,o;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return r=function(e){return{type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"sorry, there was an error while writing your file."}},n.prev=1,n.next=4,window.pfs.writeFile(W.a.join(e,t),"dummy text","utf8");case 4:return n.next=6,window.pfs.readdir(e);case 6:-1!==(s=n.sent).indexOf(t)&&(o={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"File ".concat(t," has been created.")},a(o),a({type:"UPDATE_FILE_DIRECTORY",payload:s})),n.next=13;break;case 10:n.prev=10,n.t0=n.catch(1),a(r(n.t0));case 13:case"end":return n.stop()}},n,null,[[1,10]])}));return function(e){return n.apply(this,arguments)}}()},$=function(){var e=Object(v.a)(E.a.mark(function e(t,n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.git.status({dir:t,filepath:n});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)}));return function(t,n){return e.apply(this,arguments)}}(),q=function(){var e=Object(v.a)(E.a.mark(function e(t,n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(n.map(function(){var e=Object(v.a)(E.a.mark(function e(n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=n,e.next=3,$(t,n);case 3:return e.t1=e.sent,e.abrupt("return",{fileName:e.t0,fileStatus:e.t1});case 5:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)}));return function(t,n){return e.apply(this,arguments)}}(),z=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r,s;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(n.prev=0,0!==t.length){n.next=5;break}return a({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"fatal: Not a git repository (or any of the parent directories): .git"}),n.abrupt("return");case 5:return n.next=7,q(e,t);case 7:r=n.sent,s=R(r),a({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:s}),n.next=16;break;case 13:n.prev=13,n.t0=n.catch(0),console.log(n.t0);case 16:case"end":return n.stop()}},n,null,[[0,13]])}));return function(e){return n.apply(this,arguments)}}()},K=function(){var e=Object(v.a)(E.a.mark(function e(t,n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,window.git.add({dir:t,filepath:n});case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)}));return function(t,n){return e.apply(this,arguments)}}(),Q=function(){var e=Object(v.a)(E.a.mark(function e(t,n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(n.map(function(){var e=Object(v.a)(E.a.mark(function e(n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=n,e.next=3,K(t,n);case 3:return e.t1=e.sent,e.abrupt("return",{fileName:e.t0,fileStatus:e.t1});case 5:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)}));return function(t,n){return e.apply(this,arguments)}}(),V=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r,s;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,Q(e,t);case 3:return n.next=5,q(e,t);case 5:r=n.sent,s=R(r),a({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:s}),n.next=14;break;case 11:n.prev=11,n.t0=n.catch(0),console.log(n.t0);case 14:case"end":return n.stop()}},n,null,[[0,11]])}));return function(e){return n.apply(this,arguments)}}()},X=function(){var e=Object(v.a)(E.a.mark(function e(t,n,a,r){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,Promise.all(n.map(function(){var e=Object(v.a)(E.a.mark(function e(n){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.t0=n,e.next=3,window.git.commit({dir:t,author:a,message:r});case 3:return e.t1=e.sent,e.abrupt("return",{fileName:e.t0,fileStatus:e.t1});case 5:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()));case 2:return e.abrupt("return",e.sent);case 3:case"end":return e.stop()}},e)}));return function(t,n,a,r){return e.apply(this,arguments)}}(),Z=function(e,t,n,a){return function(){var r=Object(v.a)(E.a.mark(function r(s){var o,c,i,p;return E.a.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,q(e,t);case 3:return o=r.sent,c=o.filter(function(e){return"added"===(t=e.fileStatus)||"modified"===t||"deleted"===t;var t}),i=c.length,p="",c.forEach(function(e){var t="added"===e.fileStatus?"created":e.fileStatus;p+="".concat(t,":    ").concat(e.fileName,"\n      ")}),p="".concat(i," ").concat(i>1?"files":"file"," changed\n    ").concat(p),r.next=11,X(e,c,n,a);case 11:s({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:p}),r.next=18;break;case 15:r.prev=15,r.t0=r.catch(0),console.log(r.t0);case 18:case"end":return r.stop()}},r,null,[[0,15]])}));return function(e){return r.apply(this,arguments)}}()},ee=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r,s,o;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,window.git.checkout({dir:e,ref:t});case 3:return n.next=5,window.git.currentBranch({dir:e});case 5:r=n.sent,a({type:"GET_CURRENT_DIRECTORY",payload:r}),s={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"Switched to branch '".concat(r,"'")},a(s),n.next=17;break;case 12:n.prev=12,n.t0=n.catch(0),console.log(n.t0),o={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"error: pathspec ".concat(t," did not match any file(s) known to git.")},a(o);case 17:case"end":return n.stop()}},n,null,[[0,12]])}));return function(e){return n.apply(this,arguments)}}()},te=function(e,t){return function(){var t=Object(v.a)(E.a.mark(function t(n){var a,r,s;return E.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,window.git.listBranches({dir:e});case 3:return a=t.sent,t.next=6,window.git.currentBranch({dir:e});case 6:r=t.sent,a[a.indexOf(r)]="*".concat(r),s=a.map(function(e){return"".concat(e,"\n")}),n({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:s}),t.next=16;break;case 14:t.prev=14,t.t0=t.catch(0);case 16:case"end":return t.stop()}},t,null,[[0,14]])}));return function(e){return t.apply(this,arguments)}}()},ne=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,window.git.branch({dir:e,ref:t});case 3:r={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"branch ".concat(t," has been created. Type git branch to see all branches.")},a(r),n.next=9;break;case 7:n.prev=7,n.t0=n.catch(0);case 9:case"end":return n.stop()}},n,null,[[0,7]])}));return function(e){return n.apply(this,arguments)}}()},ae=function(e,t){return function(){var n=Object(v.a)(E.a.mark(function n(a){var r;return E.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return n.prev=0,n.next=3,window.git.deleteBranch({dir:e,ref:t});case 3:r={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"branch ".concat(t," has been deleted. Type git branch to see all branches.")},a(r),n.next=10;break;case 7:n.prev=7,n.t0=n.catch(0),console.log(n.t0);case 10:case"end":return n.stop()}},n,null,[[0,7]])}));return function(e){return n.apply(this,arguments)}}()},re=function(e,t,n,a,r){return function(){var s=Object(v.a)(E.a.mark(function s(o){var c,i;return E.a.wrap(function(s){for(;;)switch(s.prev=s.next){case 0:return console.log(e,a,r),s.prev=1,s.next=4,window.git.push({dir:e,remote:"origin",ref:n,corsProxy:a,username:t.email,password:t.githubPassword});case 4:c=s.sent,console.log(c),i={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"successful push to origin/".concat(n," @ ").concat(r)},o(i),s.next=13;break;case 10:s.prev=10,s.t0=s.catch(1),console.log(s.t0);case 13:case"end":return s.stop()}},s,null,[[1,10]])}));return function(e){return s.apply(this,arguments)}}()},se=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(n=Object(_.a)(this,(e=Object(y.a)(t)).call.apply(e,[this].concat(r)))).handleSubmit=function(e){e.preventDefault(),n.props.execute(n.props.store.command),n.props.dispatch({type:"CLEAR_COMMAND_LINE"})},n.handleChange=function(e){(0,n.props.dispatch)({type:"UPDATE_COMMAND",payload:e.target.value})},n}return Object(x.a)(t,e),Object(O.a)(t,[{key:"render",value:function(){return r.a.createElement("form",{className:"level",onSubmit:this.handleSubmit},r.a.createElement("input",{className:"level-left input git-command-input",placeholder:"Try a git command (git status)...",type:"text",value:this.props.store.command,onChange:this.handleChange}),r.a.createElement("button",{className:"level-right button is-success",type:"submit"},"Run"))}}]),t}(a.Component);var oe=Object(c.b)(function(e){return{store:e.commandLine}})(se),ce=function(e){function t(){var e,n;Object(w.a)(this,t);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(n=Object(_.a)(this,(e=Object(y.a)(t)).call.apply(e,[this].concat(r)))).handleUpdate=function(e){(0,n.props.dispatch)({type:"UPDATE_".concat(e.target.id),payload:e.target.value})},n.handleClonePlayRepo=function(){Y(n.props.globals.homeDirectory,n.props.globals.corsProxy,n.props.globals.githubUrl,"develop")(n.props.dispatch)},n.handleClonePersonalRepo=function(){Y(n.props.globals.homeDirectory,n.props.globals.corsProxy,n.props.userDetails.remoteRepoURL,n.props.userDetails.remoteBranch)(n.props.dispatch)},n}return Object(x.a)(t,e),Object(O.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"container user-details-container"},r.a.createElement("p",null,"Click this button to clone the develop branch of a provided dummy repo"),r.a.createElement("p",null,"Github link: ",this.props.globals.repoUrl),r.a.createElement("button",{className:"level button is-link is-outlined",onClick:this.handleClonePlayRepo,type:"submit"},"Clone play repo"),r.a.createElement("p",null,"Or fill out the auth details of your own repo to clone from and push to"),r.a.createElement("input",{className:"input level user-detail",id:"NAME",value:this.props.userDetails.name,onChange:this.handleUpdate,placeholder:"name"}),r.a.createElement("input",{className:"input level user-detail",id:"EMAIL",value:this.props.userDetails.email,onChange:this.handleUpdate,placeholder:"email"}),r.a.createElement("input",{className:"input level user-detail",id:"PASSWORD",type:"password",value:this.props.userDetails.githubPassword,onChange:this.handleUpdate,placeholder:"github password (for git push)"}),r.a.createElement("input",{className:"input level user-detail",id:"REMOTE_REPO_URL",value:this.props.userDetails.remoteRepoURL,onChange:this.handleUpdate,placeholder:"github repo .git link "}),r.a.createElement("input",{className:"input level user-detail",id:"REMOTE_BRANCH",value:this.props.userDetails.remoteBranch,onChange:this.handleUpdate,placeholder:"github repo branch"}),r.a.createElement("button",{className:"level button is-link is-outlined",onClick:this.handleClonePlayRepo,type:"submit"},"Clone personal repo"))}}]),t}(a.Component);var ie=Object(c.b)(function(e){return{userDetails:e.userDetails,globals:e.appState.globals}})(ce),pe=function(e){function t(e){var n;return Object(w.a)(this,t),(n=Object(_.a)(this,Object(y.a)(t).call(this,e))).executeCommand=function(e){var t=e.trim().split(" ");"git"===t[0]?n.gitParser["".concat(t[0]," ").concat(t[1])]?n.gitParser["".concat(t[0]," ").concat(t[1])](t.slice(2)):n.gitParser.default():"touch"===t[0]?n.touchParser(t.slice(1)):n.gitParser.default()},n.gitParser={"git init":function(){var e=Object(v.a)(E.a.mark(function e(){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n.sendUnsupportedMessage();case 1:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}(),"git status":function(){var e=Object(v.a)(E.a.mark(function e(t){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:z(n.props.appState.globals.homeDirectory,n.props.appState.files)(n.props.dispatch);case 1:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),"git log":function(){var e=Object(v.a)(E.a.mark(function e(){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:B(n.props.appState.globals.homeDirectory)(n.props.dispatch);case 1:case"end":return e.stop()}},e)}));return function(){return e.apply(this,arguments)}}(),"git branch":function(){var e=Object(v.a)(E.a.mark(function e(t){var a,r,s,o;return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:a=C(t),r=a.branchName,s=a.branchCommand,e.t0=s,e.next="list"===e.t0?4:"create"===e.t0?6:"delete"===e.t0?8:10;break;case 4:return te(n.props.appState.globals.homeDirectory,r)(n.props.dispatch),e.abrupt("break",13);case 6:return ne(n.props.appState.globals.homeDirectory,r)(n.props.dispatch),e.abrupt("break",13);case 8:return ae(n.props.appState.globals.homeDirectory,r)(n.props.dispatch),e.abrupt("break",13);case 10:return o={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"There is a error with the branch command"},n.props.dispatch(o),e.abrupt("break",13);case 13:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),"git commit":function(){var e=Object(v.a)(E.a.mark(function e(t){var a,r,s;return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(a={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG"},n.props.userDetails.email&&n.props.userDetails.name){e.next=5;break}return a.payload="You need a name and email address to commit. This can be fake.",n.props.dispatch(a),e.abrupt("return");case 5:if("error"!==(r=A(t))){e.next=10;break}return a.payload="There is a error with the commit",n.props.dispatch(a),e.abrupt("return");case 10:if(e.prev=10,(s=F(t,n.props.appState.files)).valid){e.next=16;break}return a.payload="There is a error with the commit. ".concat(s.message),n.props.dispatch(a),e.abrupt("return");case 16:"."===t[0]||"-m"===t[0]?Z(n.props.appState.globals.homeDirectory,n.props.appState.files,n.props.userDetails,r)(n.props.dispatch):s.valid?Z(n.props.appState.globals.homeDirectory,n.props.appState.files,n.props.userDetails,r)(n.props.dispatch):n.sendUnsupportedMessage(),e.next=22;break;case 19:e.prev=19,e.t0=e.catch(10),console.log(e.t0);case 22:case"end":return e.stop()}},e,null,[[10,19]])}));return function(t){return e.apply(this,arguments)}}(),"git add":function(){var e=Object(v.a)(E.a.mark(function e(t){var a,r;return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("."!==t[0]||1!==t.length){e.next=5;break}console.log("in add ."),V(n.props.appState.globals.homeDirectory,n.props.appState.files)(n.props.dispatch),e.next=15;break;case 5:a=!0,r=0;case 7:if(!(r<t.length)){e.next=14;break}if(-1!==t[r].indexOf(".")){e.next=11;break}return a=!1,e.abrupt("break",14);case 11:r++,e.next=7;break;case 14:a?V(n.props.appState.globals.homeDirectory,t)(n.props.dispatch):n.sendUnsupportedMessage();case 15:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),"git checkout":function(){var e=Object(v.a)(E.a.mark(function e(t){var a;return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("error"!==(a=L(t)).command){e.next=5;break}n.sendUnsupportedMessage(),e.next=12;break;case 5:if("create"!==a.command){e.next=11;break}return e.next=8,ne(n.props.appState.globals.homeDirectory,a.branchName)(n.props.dispatch);case 8:ee(n.props.appState.globals.homeDirectory,a.branchName)(n.props.dispatch),e.next=12;break;case 11:ee(n.props.appState.globals.homeDirectory,a.branchName)(n.props.dispatch);case 12:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),"git push":function(){var e=Object(v.a)(E.a.mark(function e(t){return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:re(n.props.appState.globals.homeDirectory,n.props.userDetails,n.props.appState.gitCurrentBranch,n.props.appState.globals.corsProxy,n.props.appState.globals.githubUrl)(n.props.dispatch);case 1:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),default:function(e){n.sendUnsupportedMessage()}},n.touchParser=function(){var e=Object(v.a)(E.a.mark(function e(t){var a,r;return E.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:a=t[0],t.length>1?n.sendUnsupportedMessage():-1===a.indexOf(".")?(r={type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"Not a valid file name. Please add a file extension. Ex: .txt)."},n.props.dispatch(r)):J(n.props.appState.globals.homeDirectory,a)(n.props.dispatch);case 2:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}(),n.sendUnsupportedMessage=function(){n.props.dispatch({type:"UPDATE_WITH_ONE_GIT_RESPONSE_MESSAGE_LOG",payload:"sorry, we dont understand/support that command yet"})},n.props.dispatch.bind(Object(S.a)(n)),window.FS=new D.a("userFS",{wipe:!0}),window.git=k,window.git.plugins.set("fs",window.FS),window.pfs=P()(window.FS),window.pfs.mkdir(n.props.appState.globals.homeDirectory),window.pfs.readdir(n.props.appState.globals.homeDirectory),n}return Object(x.a)(t,e),Object(O.a)(t,[{key:"render",value:function(){var e=this;return r.a.createElement("div",{className:"section app-container"},r.a.createElement("div",{className:"container files-container"},0===this.props.appState.files.length?"~/User".concat(this.props.appState.globals.homeDirectory):"Files:",this.props.appState.files.map(function(t,n){return r.a.createElement("li",{className:"file",key:n},e.props.appState.globals.homeDirectory,"/",t)})),r.a.createElement(ie,{handleUpdate:this.handleDetailsChange}),r.a.createElement("div",{className:"container console-container"},"Git Some Help",r.a.createElement(oe,{execute:this.executeCommand}),r.a.createElement("div",{className:"git-logs"},this.props.appState.gitResponseMesssages.map(function(e){return r.a.createElement("p",{className:"message",key:e.id},"> ",e.text)}))),r.a.createElement("div",{className:"help-container"}))}}]),t}(a.Component);var ue=Object(c.b)(function(e){return{appState:e.appState,userDetails:e.userDetails}})(pe);"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()});var le=Object(p.composeWithDevTools)(Object(i.applyMiddleware)(u.a)),de=Object(i.createStore)(g,void 0,le);o.a.render(r.a.createElement(c.a,{store:de},r.a.createElement(ue,null)),document.getElementById("root"));var he=t.default=de},68:function(e,t,n){e.exports=n(130)},77:function(e,t,n){},81:function(e,t,n){}},[[68,1,2]]]);
//# sourceMappingURL=main.cff39140.chunk.js.map